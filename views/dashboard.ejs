<!DOCTYPE html>
<html lang="de">

<head>
    <meta charset="UTF-8"> 
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Landing Page</title>
    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js" integrity="sha384-fKnu0iswBIqkjxrhQCTZ7qlLHOFEgNkRmK2vaO/LbTZSXdJfAu6ewRBdwHPhBo/H" crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/css/dashboard.css">

    <style>
        .blue{
            background-color: lightskyblue;
        }
    </style>
</head>

<body>
    <h1 class="headline">Ihr Dashboard</h1>
    <!--Damit der erste Buchstabe des Namens gross geschrieben wird-->
    <h1>Hello <%= user.charAt(0).toUpperCase() + user.slice(1) %></h1>
        
    <div class="wrapper">
        <!-- Send messages to the blockchain -->
        <div class="send_messages">
            <h4>Senden Sie eine Nachricht</h4>
            <h4>Private Message </h4>
            <!--Send Message-->
            <form action="/send_text" method=POST>
                <label class="selector" for="recipient">Empfänger</label>
                <!-- Add multiple to allow multiple selections -->
                <select name="recipient" id="res" size="5" >
                    <optgroup label="Senden an">
                        <option value="Broadcast" selected>An alle</option>
                        <option value="Mandant">Mandant</option>
                        <option value="Berater">Berater</option>
                        <option value="Finanzamt">Finanzamt</option>
                    </optgroup>
                </select>
                <br>
                Nachricht: <input name="message" type="text" id="message"><br>
                <button type="submit">SUBMIT</button>
            </form>
        </div>

        <div class="send_docs">
            <!-- Send Files to the Blockchain -->
            <!-- direkt hinter file kann noch multiple gestellt werde -->
            <h4>Senden Sie ihre Dokumente</h4>
            <form action="/upload-file" method="POST" enctype="multipart/form-data">
                <label for="recipient">Empfänger</label>
                <!-- Add multiple to allow multiple selections -->
                <select name="recipient" id="res" size="5" >
                    <optgroup label="Senden an">
                        <option value="Broadcast" selected>An alle</option>
                        <option value="Mandant">Mandant</option>
                        <option value="Berater">Berater</option>
                        <option value="Finanzamt">Finanzamt</option>
                    </optgroup>
                </select>
                <br>
                <input type="file" name="file">
                <input type="submit" value="Upload">
            </form>
        </div>



        <!-- Display Messages -->
        <div class="msg">
            <div>
                <ul id="messages">
                </ul>
            </div>
            <div>
                <ul id="mymessages">
                </ul>
            </div>
        </div>

        <div class="doc">
            <ul id="files">
            </ul>

        </div>

        <div>
            <a href="/users/logout">Logout</a>
        </div>
        
        <div class="Boxen">
            <div class="box box1">box 1bis3 column rows</div>
            <div class="box box2">box 2</div>
            <div class="box box3">box 3</div>
            <div class="box box4">box 4</div>
        </div>





        <!-- <form id="form" action="">      
            <input id="input" autocomplete="off" />
            <button id="send">Send</button>
        </form> -->


        <!-- Socket.io Script -->
        <script>
            var socket = io.connect('http://localhost:2000');
            var messages = document.getElementById('messages');
            var mymessages = document.getElementById('mymessages');
            var files = document.getElementById('files');
            const org_0 = {id:"did:firefly:org/ca0fb065-cad3-4098-b5ca-236619e6b1a4", name:"Mandant"};
            const org_1 = {id:"did:firefly:org/a7f8d304-81b7-4123-9ed4-5d13daa319fc", name:"Steuerberater"};
            const org_2 ={id:"did:firefly:org/ed8218b3-46ff-41e5-ba82-30ea724abfa2", name:"Finanzamt"};
            // var form = document.getElementById('form');
            // console.log(form);
            // var input = document.getElementById('input');
            // console.log(input)
            // //send messages to server
            // form.addEventListener('submit', function(e) {
            //     e.preventDefault();
            //     if(input.value){
            //         socket.emit('chat message', input.value);
            //         input.value = '';
            //     }
            // });
            //receive messages from server
            socket.on('chat message received', async function(infos) {
                console.log(infos);
                var count = 0;
                const user = infos.user;
                const msg = infos.rows;
                const pdfs = infos.file;
                const d = new Date();
                //Clear all elements in list so they dont get displayed multiple times
                messages.innerHTML = "";
                mymessages.innerHTML = "";
                files.innerHTML= "";
                //Handle PDFs => Missing: Wer hat an wen gesendet
                for(var i of pdfs){
                    var pdf = new Blob(pdfs, {type: 'application/pdf'});
                    var url = URL.createObjectURL(pdf);
                    var a = document.createElement('a');
                    //FIND OUT NAME OF THE PDF
                    var linkText = document.createTextNode("File_0"+count);
                    count += 1;
                    a.appendChild(linkText);
                    a.title = "title";
                    a.download="newFilename"
                    a.href = url;
                    files.appendChild(a);
                    //Just for better look, can be handled by css 
                    files.appendChild(document.createElement('br'))

                }

                // var pdf = new Blob(infos.file, {type: 'application/pdf'});
                // var url = URL.createObjectURL(pdf);
                // var a = document.createElement('a');
                // var linkText = document.createTextNode("my title text");
                // a.appendChild(linkText);
                // a.title = "my title text";
                // // target would allow the file to be opend in a new browser window 
                // a.target ="_blank"
                // //download will automatically download the file with given name!
                // a.download="newFilename"
                // a.href = url;
                // files.appendChild(a);



                console.log(user)
                switch(user){
                    case "Mandant":
                        for(var i of msg){
                            var date = i.message.header.created
                            var time = date.split("T")[1].split(".")[0].slice(0,-3)
                            var value = time+"  "+i.data[0].value



                            var item = document.createElement('li');
                            item.textContent = value

                            var empty = document.createElement('li');
                            empty.textContent = ""
                            var sender = i.message.header.author
                            // console.log("sender: " + sender)
                            // console.log("org: " +org_0)
                            switch(sender){
                                case org_0.id:
                                    mymessages.appendChild(item)
                                    messages.appendChild(empty)
                                    break;

                                case org_1.id:
                                    messages.appendChild(item)
                                    mymessages.appendChild(empty)
                                    break;

                                case org_2.id:
                                    messages.appendChild(item)
                                    mymessages.appendChild(empty)
                                    break;
                            }
                        }
                        break;
                    case "Steuerberater":
                        for(var i of msg){
                            var date = i.message.header.created
                            var time = date.split("T")[1].split(".")[0].slice(0,-3)
                            var value = time+"  "+i.data[0].value



                            var item = document.createElement('li');
                            item.textContent = value

                            var empty = document.createElement('li');
                            empty.textContent = ""
                            var sender = i.message.header.author
                            // console.log("sender: " + sender)
                            // console.log("org: " +org_0)
                            switch(sender){
                                case org_0.id:
                                    messages.appendChild(item)
                                    mymessages.appendChild(empty)
                                    break;

                                case org_1.id:
                                    mymessages.appendChild(item)
                                    messages.appendChild(empty)
                                    break;

                                case org_2.id:
                                    messages.appendChild(item)
                                    mymessages.appendChild(empty)
                                    break;
                            }
                        }
                        break;
                    case "Finanzamt":
                        for(var i of msg){
                            var date = i.message.header.created
                            var time = date.split("T")[1].split(".")[0].slice(0,-3)
                            var value = time+"  "+i.data[0].value
                            //NEUER TAG EINFÜGEN
                            // var day = parseInt(date.split("T")[0].slice(-2))
                            
                            // if( d.getDate() != i.message.header.created.split("T")[0].slice(-2)){
                            //     var newday = document.createElement('li')
                            //     newday.textContent = date.split("T")
                            //     messages.appendChild(newday)
                            //     mymessages.appendChild(newday)
                            // }
                            var item = document.createElement('li');
                            item.textContent = value
                            // var date = document.createElement('li');
                            // date.textContent = i.message.header.created;
                            var empty = document.createElement('li');
                            empty.textContent = ""
                            var sender = i.message.header.author
                            // console.log("sender: " + sender)
                            // console.log("org: " +org_0)
                            switch(sender){
                                case org_0.id:
                                    messages.appendChild(item)
                                    mymessages.appendChild(empty)
                                    break;

                                case org_1.id:
                                    messages.appendChild(item)
                                    mymessages.appendChild(empty)
                                    break;

                                case org_2.id:
                                    mymessages.appendChild(item)
                                    messages.appendChild(empty)
                                    break;
                            }
                        }
                        break;
                    
                }






                // for(var i of msg){
                //     var item = document.createElement('li');
                //     //.slice(1,-1);
                //     item.textContent = i.data[0].value;
                //     var time = document.createElement('li');
                //     time.textContent = i.message.header.created;
                //     //var author = document.createElement('li');
                //     //author.textContent = i.message.header.author;
                //     //console.log(i.message.header.author)
                //     messages.appendChild(item);
                //     messages.appendChild(time);
                //     //messages.appendChild(author);
                // }           
                window.scrollTo(0, document.body.scrollHeight);
            });
            //send data from client to server: need jsobject with data and give it a name 
            // console.log('Sending');
            // var data = {
            //     a: "Test",
            //     b: "Data"
            // }
            // socket.emit('message', data);

            //CSS Style

            


        </script>
        <!-- Für Typescript benötigt  -->
        <!-- Brauch ich die überhaupt???? -->
        <script>var exports = {};</script>
        <script src="https://rawgit.com/Microsoft/TypeScript/master/lib/typescriptServices.js"></script>
        <script src="https://rawgit.com/basarat/typescript-script/master/transpiler.js"></script>
    </div>
</body>

</html>