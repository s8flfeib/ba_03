<!DOCTYPE html>
<html lang="de">

<head>
    <meta charset="UTF-8"> 
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Landing Page</title>
    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js" integrity="sha384-fKnu0iswBIqkjxrhQCTZ7qlLHOFEgNkRmK2vaO/LbTZSXdJfAu6ewRBdwHPhBo/H" crossorigin="anonymous"></script>
    <!-- <link rel="stylesheet" href="../css/dashboard.css"> -->

</head>

<body>
    <h1 class="headline">Ihr Dashboard</h1>

    <!--Damit der erste Buchstabe des Namens gross geschrieben wird-->
    <h1>Hello <%= user.charAt(0).toUpperCase() + user.slice(1) %></h1>

    
    <!-- Send messages to the blockchain -->
    <h4>Senden Sie eine Nachricht</h4>

    <!--Private Message option-->
    <!-- <div class="options">
        <ul>
            <li>
                Steuerberater <input type="checkbox">
            </li>
            <li>
                Finanzamt <input type="checkbox">
            </li>
            <li>
                Mandant <input type="checkbox">
            </li>
        </ul>
    </div> -->
    <h4>Private Message </h4>
    <form action="/send_text" method=POST>
        <label class="switch">
            <input type="checkbox">
            <span class="slider"></span>
        </label>
    </form>

    <br>
    <!-- Display Messages -->
    <p>
        <span>
            <ol>
                <li id="listelement"></li><br>
            </ol>
        </span>
    </p><br>

    <!--Send Broadcast-->
    <form action="/send_text" method=GET>
        Nachricht: <input name="message" type="text" id="message" onclick="checkbox()"><br>
        <button type="submit">SUBMIT</button>
    </form><br>

    <!-- Get Messages -->




    <!-- Send Files to the Blockchain -->
    <!-- direkt hinter file kann noch multiple gestellt werde -->
    <h4>Senden Sie ihre Dokumente</h4>
    <form action="/send_file" method="POST" enctype=multipart/form-data >
        <label for="document">Dokumente: </label> 
        <input name="file" type="file" multiple="" id="file"/><br>
        <button type="submit">Upload</button>
    </form>
    <br>
    <form action="/users/dashboard">
        <input id="inputFile" type="file"/>
        <button type="submit" onclick="convertToBase64()">Upload</button>
    </form>


    <br>
    <a href="/users/logout">Logout</a>

    <ul id="messages">
    </ul>
    <form id="form" action="">      
        <input id="input" autocomplete="off" />
        <button id="send">Send</button>
    </form>


    <!-- Convert to Base64 Script -->
    <script type="text/javascript">
        async function convertToBase64() {
            //Read File
            console.log("We have the pdf");
            var selectedFile = document.getElementById("inputFile").files;
            //Check File is not Empty
            if (selectedFile.length > 0) {
                // Select the very first file from list
                var fileToLoad = selectedFile[0];
                // FileReader function for read the file.
                var fileReader = new FileReader();
                var base64;
                // Onload of file read the file content
                fileReader.onload = function(fileLoadedEvent) {
                    base64 = fileLoadedEvent.target.result;
                };
                // Convert data to base64
                var pdf_base64 = fileReader.readAsDataURL(fileToLoad);
                //pdf_base64 is our encoded pdf file
                const data = { pdf_base64 };
                const options = {
                    method: 'POST',
                    //specify data as json data in the header
                    headers: {
                        'Content-Type': 'application/json'   
                    },
                    body: JSON.stringify(data)
                }
                //fetch returns a promis => .then
                fetch('/send_file1', options);
                //const json = await response.json();
                //console.log(json);
            } else {
                console.log("File not valid!")
            }
        }
    </script>

    <!-- Socket.io Script -->
    <script>
        var socket = io.connect('http://localhost:2000');
        var messages = document.getElementById('messages');
        var form = document.getElementById('form');
        console.log(form);
        var input = document.getElementById('input');
        console.log(input)
        //send messages to server
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            if(input.value){
                socket.emit('chat message', input.value);
                input.value = '';
            }
        });
        //receive messages from server
        socket.on('chat message received', function(msg) {
            console.log(msg);
            for(var i of msg){
                var item = document.createElement('li');
                item.textContent = i.data[0].value;
                var time = document.createElement('li');
                time.textContent = i.message.header.created;
                var author = document.createElement('li');
                author.textContent = i.message.header.author;
                messages.appendChild(item);
                messages.appendChild(time);
                messages.appendChild(author);
            }           
            window.scrollTo(0, document.body.scrollHeight);
        });
        //send data from client to server: need jsobject with data and give it a name 
        // console.log('Sending');
        // var data = {
        //     a: "Test",
        //     b: "Data"
        // }
        // socket.emit('message', data);
    </script>
    

    <!-- Für Typescript benötigt  -->
    <script>var exports = {};</script>
    <script src="https://rawgit.com/Microsoft/TypeScript/master/lib/typescriptServices.js"></script>
    <script src="https://rawgit.com/basarat/typescript-script/master/transpiler.js"></script>
</body>

</html>