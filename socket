    <!-- <form action="/read_text" method=GET>
        <button type="submit">GET MESSAGE</button>
    </form> -->

/read_text
//bring to corresponding login page

        //Gets id and Hash of messages depending which response value 
        var allMsg = await firefly1.getMessages(MAX_MESSAGES)
        //console.log(response);
        const rows: MessageRow[] = [];
        //push all 25 messages to MessageRow{message: FireFlyMessage, data:FireFlyData[]}
        for(const message of allMsg) {
            var message_data = await firefly1.retrieveData(message.data)
            rows.push({message: message, data: message_data})
        }
        //access massages and time
        console.log(rows[20].data[0].value);
        console.log(rows[20].message.header.created);
        
        //setup socket connection => set connection up on client side (check Socket.io)
        // io.on('connection', (socket:any) => {
        //     console.log(socket.id);
        // });
        // console.log("Im here!");
        // // function newConnection(socket:any) {
        //     console.log('new Socket Connection' + socket.id);
        //     console.log(socket.id);
        // }

        io.on('connection', newConnection);

        function newConnection(socket:any){
            console.log("New Socket Connection: " + socket.id);
            //print out the message event
            socket.on('chat message', (msg:any) => {
                console.log('chat message received' + msg);
                //send back the message to all 
                io.emit('chat message received', rows);
            });
            socket.on('disconnect', () => {
                //triggers when closing browser or logout
                console.log('user disconnected');
            })
        }

        res.redirect("/users/dashboard");
        
    })
    
    
Fetch:
    //Playing around with fetch
    //req holds all the information and data thats send from the client
    //res variable that can be used to send back to the client
    // app.post('/api',(req, res) => {
    //     console.log(req.body);
    //     res.json({
    //         status: "success",
    //         latitude: req.body.lat,
    //         longitude: req.body.long
    //     });
    //     //res.end();
    // });

    //check authentication before moving on to the rest
    
    
    
    {"id":"fb126f33-b5fa-4ada-8c38e613302b75ef",
    "validator":"json",
    "namespace":"default",
    "hash":"a6bce30e09165d132d4ef4d65dd1b9184d66570ac4bc4fcb07c1f0980066b9ac",
    "created":"2022-02-11T23:30:50.803946556Z",
    "value":{"filename":"-","mimetype":"form-data; name=\"file\"; filename=\"-\"","size":20131},"blob":				 {"hash":"2504a0c5d1e7e2895548939e43473cd36213197f550f02a9ca5ef95a5e4473c8"}}


